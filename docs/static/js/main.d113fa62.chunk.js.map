{"version":3,"sources":["Pokecard.js","Pokedex.js","Pokegame.js","App.js","reportWebVitals.js","index.js"],"names":["Pokecard","number","imgSrc","this","props","id","slice","className","name","src","alt","type","exp","Component","Pokedex","title","isWinner","pokemon","map","p","base_experience","Pokegame","hand1","hand2","length","randIdx","Math","floor","random","randPokemon","splice","push","exp1","reduce","exp2","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAwBeA,G,6KAdP,IAJYC,EAIRC,EAAM,UAND,8DAMC,QAJED,EAI0BE,KAAKC,MAAMC,KAJf,IAAM,YAAKJ,GAASK,OAAO,GAAKL,EAIxD,QACV,OACI,sBAAKM,UAAU,WAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgCJ,KAAKC,MAAMI,OAC3C,qBAAKD,UAAU,iBAAf,SACI,qBAAKE,IAAKP,EAAQQ,IAAKP,KAAKC,MAAMI,SAEtC,sBAAKD,UAAU,gBAAf,mBAAsCJ,KAAKC,MAAMO,QACjD,sBAAKJ,UAAU,gBAAf,kBAAqCJ,KAAKC,MAAMQ,c,GAVzCC,cCwBRC,G,6KAzBP,IAAIC,EAMJ,OAJIA,EADAZ,KAAKC,MAAMY,SACH,oBAAIT,UAAU,iBAAd,0BAEA,oBAAIA,UAAU,gBAAd,wBAGR,sBAAKA,UAAU,UAAf,UACKQ,EACD,oDAAuBZ,KAAKC,MAAMQ,OAClC,qBAAKL,UAAU,gBAAf,SACKJ,KAAKC,MAAMa,QAAQC,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,CACId,GAAIc,EAAEd,GACNG,KAAMW,EAAEX,KACRG,KAAMQ,EAAER,KACRC,IAAKO,EAAEC,8B,GAnBbP,cCDhBQ,E,uKAkBE,IAHA,IAAIC,EAAQ,GACRC,EAAK,YAAOpB,KAAKC,MAAMa,SAEpBK,EAAME,OAASD,EAAMC,QAAQ,CAChC,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWL,EAAMC,QAC3CK,EAAcN,EAAMO,OAAOL,EAAS,GAAG,GAC3CH,EAAMS,KAAKF,GAGf,IAAIG,EAAOV,EAAMW,QAAO,SAACrB,EAAKK,GAAN,OAAkBL,EAAMK,EAAQG,kBAAiB,GACrEc,EAAOX,EAAMU,QAAO,SAACrB,EAAKK,GAAN,OAAkBL,EAAMK,EAAQG,kBAAiB,GAEzE,OACI,gCACI,cAAC,EAAD,CAASH,QAASK,EAAOV,IAAKoB,EAAMhB,SAAUgB,EAAOE,IACrD,cAAC,EAAD,CAASjB,QAASM,EAAOX,IAAKsB,EAAMlB,SAAUkB,EAAOF,W,GA9B9CnB,aAAjBQ,EACKc,aAAe,CAClBlB,QAAS,CACL,CAAEZ,GAAI,EAAGG,KAAM,aAAcG,KAAM,OAAQS,gBAAiB,IAC5D,CAAEf,GAAI,EAAGG,KAAM,WAAYG,KAAM,QAASS,gBAAiB,IAC3D,CAAEf,GAAI,GAAIG,KAAM,UAAWG,KAAM,MAAOS,gBAAiB,IACzD,CAAEf,GAAI,GAAIG,KAAM,aAAcG,KAAM,SAAUS,gBAAiB,KAC/D,CAAEf,GAAI,GAAIG,KAAM,UAAWG,KAAM,WAAYS,gBAAiB,KAC9D,CAAEf,GAAI,GAAIG,KAAM,aAAcG,KAAM,SAAUS,gBAAiB,IAC/D,CAAEf,GAAI,GAAIG,KAAM,SAAUG,KAAM,SAAUS,gBAAiB,KAC3D,CAAEf,GAAI,IAAKG,KAAM,QAASG,KAAM,SAAUS,gBAAiB,MA0BxDC,QCzBAe,G,6KARX,OACE,qBAAK7B,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUM,cCQHwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d113fa62.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Pokecard.css';\n\n// const POKE_API = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/';\nconst POKE_API = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/';\n\nconst padToThree = (number) => (number <= 999 ? `00${number}`.slice(-3) : number);\n\nclass Pokecard extends Component {\n    render() {\n        let imgSrc = `${POKE_API}${padToThree(this.props.id)}.png`;\n        return (\n            <div className=\"Pokecard\">\n                <h1 className=\"Pokecard-title\">{this.props.name}</h1>\n                <div className=\"Pokecard-image\">\n                    <img src={imgSrc} alt={this.props.name} />\n                </div>\n                <div className=\"Pokecard-data\">Type: {this.props.type}</div>\n                <div className=\"Pokecard-data\">EXP: {this.props.exp}</div>\n            </div>\n        )\n    }\n}\n\nexport default Pokecard;","import React, { Component } from 'react';\nimport Pokecard from './Pokecard';\nimport './Pokedex.css';\n\nclass Pokedex extends Component {\n\n    render() {\n        let title;\n        if (this.props.isWinner) {\n            title = <h1 className=\"Pokedex-winner\">Winning Hand</h1>\n        } else {\n            title = <h1 className=\"Pokedex-loser\">Loser Hand</h1>\n        }\n        return (\n            <div className=\"Pokedex\">\n                {title}\n                <h4>Total Experience: {this.props.exp}</h4>\n                <div className=\"Pokedex-cards\">\n                    {this.props.pokemon.map((p) => (\n                        <Pokecard\n                            id={p.id}\n                            name={p.name}\n                            type={p.type}\n                            exp={p.base_experience}\n                        />\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Pokedex;","import React, { Component } from 'react';\nimport Pokedex from './Pokedex';\n\nclass Pokegame extends Component {\n    static defaultProps = {\n        pokemon: [\n            { id: 4, name: 'Charmander', type: 'fire', base_experience: 62 },\n            { id: 7, name: 'Squirtle', type: 'water', base_experience: 63 },\n            { id: 11, name: 'Metapod', type: 'bug', base_experience: 72 },\n            { id: 12, name: 'Butterfree', type: 'flying', base_experience: 178 },\n            { id: 25, name: 'Pikachu', type: 'electric', base_experience: 112 },\n            { id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95 },\n            { id: 94, name: 'Gengar', type: 'poison', base_experience: 225 },\n            { id: 133, name: 'Eevee', type: 'normal', base_experience: 65 }\n        ]\n    };\n\n    render() {\n        let hand1 = [];\n        let hand2 = [...this.props.pokemon];\n\n        while (hand1.length < hand2.length) {\n            let randIdx = Math.floor(Math.random() * hand2.length);\n            let randPokemon = hand2.splice(randIdx, 1)[0];\n            hand1.push(randPokemon);\n        }\n\n        let exp1 = hand1.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\n        let exp2 = hand2.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\n\n        return (\n            <div>\n                <Pokedex pokemon={hand1} exp={exp1} isWinner={exp1 > exp2} />\n                <Pokedex pokemon={hand2} exp={exp2} isWinner={exp2 > exp1} />\n            </div>\n        );\n    }\n}\n\nexport default Pokegame;","import React, { Component } from 'react';\nimport Pokegame from './Pokegame';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Pokegame />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}