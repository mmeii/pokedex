{"version":3,"sources":["Pokecard.js","Pokedex.js","App.js","reportWebVitals.js","index.js"],"names":["Pokecard","number","imgSrc","this","props","id","slice","className","name","src","alt","type","exp","Component","Pokedex","pokemon","map","p","base_experience","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAsBeA,G,6KAZP,IAJYC,EAIRC,EAAM,UAND,8DAMC,QAJED,EAI0BE,KAAKC,MAAMC,KAJf,IAAM,YAAKJ,GAASK,OAAO,GAAKL,EAIxD,QACV,OACI,sBAAKM,UAAU,WAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgCJ,KAAKC,MAAMI,OAC3C,qBAAKC,IAAKP,EAAQQ,IAAKP,KAAKC,MAAMI,OAClC,sBAAKD,UAAU,gBAAf,mBAAsCJ,KAAKC,MAAMO,QACjD,sBAAKJ,UAAU,gBAAf,kBAAqCJ,KAAKC,MAAMQ,c,GARzCC,cCJjBC,G,6KAeE,OACI,sBAAKP,UAAU,UAAf,UACI,0CACA,qBAAKA,UAAU,gBAAf,SACKJ,KAAKC,MAAMW,QAAQC,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,CACIZ,GAAIY,EAAEZ,GACNG,KAAMS,EAAET,KACRG,KAAMM,EAAEN,KACRC,IAAKK,EAAEC,8B,GAxBbL,cAAhBC,EACKK,aAAe,CAClBJ,QAAS,CACL,CAAEV,GAAI,EAAGG,KAAM,aAAcG,KAAM,OAAQO,gBAAiB,IAC5D,CAAEb,GAAI,EAAGG,KAAM,WAAYG,KAAM,QAASO,gBAAiB,IAC3D,CAAEb,GAAI,GAAIG,KAAM,UAAWG,KAAM,MAAOO,gBAAiB,IACzD,CAAEb,GAAI,GAAIG,KAAM,aAAcG,KAAM,SAAUO,gBAAiB,KAC/D,CAAEb,GAAI,GAAIG,KAAM,UAAWG,KAAM,WAAYO,gBAAiB,KAC9D,CAAEb,GAAI,GAAIG,KAAM,aAAcG,KAAM,SAAUO,gBAAiB,IAC/D,CAAEb,GAAI,GAAIG,KAAM,SAAUG,KAAM,SAAUO,gBAAiB,KAC3D,CAAEb,GAAI,IAAKG,KAAM,QAASG,KAAM,SAAUO,gBAAiB,MAuBxDJ,QCvBAM,G,6KARX,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUM,cCQHQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d5093f11.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Pokecard.css';\n\n// const POKE_API = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/';\nconst POKE_API = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/';\n\nconst padToThree = (number) => (number <= 999 ? `00${number}`.slice(-3) : number);\n\nclass Pokecard extends Component {\n    render() {\n        let imgSrc = `${POKE_API}${padToThree(this.props.id)}.png`;\n        return (\n            <div className=\"Pokecard\">\n                <h1 className=\"Pokecard-title\">{this.props.name}</h1>\n                <img src={imgSrc} alt={this.props.name} />\n                <div className=\"Pokecard-data\">Type: {this.props.type}</div>\n                <div className=\"Pokecard-data\">EXP: {this.props.exp}</div>\n            </div>\n        )\n    }\n}\n\nexport default Pokecard;","import React, { Component } from 'react';\nimport Pokecard from './Pokecard';\nimport './Pokedex.css';\n\nclass Pokedex extends Component {\n    static defaultProps = {\n        pokemon: [\n            { id: 4, name: 'Charmander', type: 'fire', base_experience: 62 },\n            { id: 7, name: 'Squirtle', type: 'water', base_experience: 63 },\n            { id: 11, name: 'Metapod', type: 'bug', base_experience: 72 },\n            { id: 12, name: 'Butterfree', type: 'flying', base_experience: 178 },\n            { id: 25, name: 'Pikachu', type: 'electric', base_experience: 112 },\n            { id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95 },\n            { id: 94, name: 'Gengar', type: 'poison', base_experience: 225 },\n            { id: 133, name: 'Eevee', type: 'normal', base_experience: 65 }\n        ]\n    };\n\n    render() {\n        return (\n            <div className=\"Pokedex\">\n                <h1>Pokedex!</h1>\n                <div className=\"Pokedex-cards\">\n                    {this.props.pokemon.map((p) => (\n                        <Pokecard\n                            id={p.id}\n                            name={p.name}\n                            type={p.type}\n                            exp={p.base_experience}\n                        />\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Pokedex;","import React, { Component } from 'react';\nimport Pokedex from './Pokedex';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Pokedex />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}